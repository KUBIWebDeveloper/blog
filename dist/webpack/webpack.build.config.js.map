{"version":3,"sources":["../../webpack/webpack.build.config.js"],"names":["require","join","webpack","merge","basicConfig","HtmlWebpackPlugin","ExtractTextPlugin","CleanWebpackPlugin","resolve","__dirname","dir","module","exports","entry","output","path","publicPath","filename","chunkFilename","rules","test","loader","options","loaders","css","extract","use","less","plugins","optimize","ModuleConcatenationPlugin","allChunks","CommonsChunkPlugin","names","template","inject","minify","removeComments","collapseWhitespace","removeAttributeQuotes","chunks","chunksSortMode","LoaderOptionsPlugin","minimize","debug","OccurrenceOrderPlugin","root"],"mappings":";;eAAiBA,QAAQ,MAAR,C;IAATC,I,YAAAA,I;;AACR,IAAMC,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,QAAQH,QAAQ,eAAR,CAAd;AACA,IAAMI,cAAcJ,QAAQ,uBAAR,CAApB;AACA,IAAMK,oBAAoBL,QAAQ,qBAAR,CAA1B;AACA,IAAMM,oBAAoBN,QAAQ,6BAAR,CAA1B;AACA,IAAMO,qBAAqBP,QAAQ,sBAAR,CAA3B;;AAEA,IAAMQ,UAAU,SAAVA,OAAU;AAAA,SAAOP,KAAKQ,SAAL,EAAgB,IAAhB,EAAsBC,GAAtB,CAAP;AAAA,CAAhB;;AAEAC,OAAOC,OAAP,GAAiBT,MAAMC,WAAN,EAAmB;AAClCS,SAAO;AACL,cAAU,eADL;AAEL,iBAAa,CACX,KADW,EAEX,YAFW,EAGX,MAHW;AAFR,GAD2B;AASlCC,UAAQ;AACNC,UAAMP,QAAQ,MAAR,CADA;AAENQ,gBAAY,EAFN;AAGNC,cAAU,yBAHJ;AAINC,mBAAe;AAJT,GAT0B;AAelCP,UAAQ;AACNQ,WAAO,CACL;AACEC,YAAM,QADR;AAEEC,cAAQ,YAFV;AAGEC,eAAS;AACPC,iBAAS;AACPC,eAAKlB,kBAAkBmB,OAAlB,CAA0B;AAC7BC,iBAAK,CAAC,YAAD;AADwB,WAA1B,CADE;AAIPC,gBAAMrB,kBAAkBmB,OAAlB,CAA0B;AAC9BC,iBAAK,CAAC,YAAD,EAAe,aAAf;AADyB,WAA1B;AAJC;AADF;AAHX,KADK;AADD,GAf0B;AAiClCE,WAAS,CACP,IAAI1B,QAAQ2B,QAAR,CAAiBC,yBAArB,EADO,EAEP,IAAIxB,iBAAJ,CAAsB;AACpBW,cAAU,gCADU;AAEpBc,eAAW;AAFS,GAAtB,CAFO,EAMP,IAAI7B,QAAQ2B,QAAR,CAAiBG,kBAArB,CAAwC;AACtCC,WAAO,CAAC,WAAD,EAAc,aAAd;AAD+B,GAAxC,CANO,EASP,IAAI5B,iBAAJ,CAAsB;AACpBY,cAAU,YADU;AAEpBiB,cAAU,YAFU;AAGpBC,YAAQ,IAHY;AAIpBC,YAAQ;AACNC,sBAAgB,IADV;AAENC,0BAAoB,IAFd;AAGNC,6BAAuB;AAHjB,KAJY;AASpBC,YAAQ,CAAC,WAAD,EAAc,aAAd,EAA6B,QAA7B,CATY;AAUpBC,oBAAgB;AAVI,GAAtB,CATO,EAqBP,IAAIvC,QAAQwC,mBAAZ,CAAgC;AAC9BC,cAAU,IADoB;AAE9BC,WAAO;AAFuB,GAAhC,CArBO,EAyBP,IAAI1C,QAAQ2B,QAAR,CAAiBgB,qBAArB,EAzBO,EA0BP,IAAItC,kBAAJ,CAAuB,CAAC,MAAD,CAAvB,EAAiC;AAC/BuC,UAAMtC,QAAQ,IAAR;AADyB,GAAjC,CA1BO;AAjCyB,CAAnB,CAAjB","file":"webpack.build.config.js","sourcesContent":["const { join } = require('path')\r\nconst webpack = require('webpack')\r\nconst merge = require('webpack-merge')\r\nconst basicConfig = require('./webpack.base.config')\r\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\r\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\r\nconst CleanWebpackPlugin = require('clean-webpack-plugin')\r\n\r\nconst resolve = dir => join(__dirname, '..', dir)\r\n\r\nmodule.exports = merge(basicConfig, {\r\n  entry: {\r\n    'js/app': './src/main.js',\r\n    'js/vendor': [\r\n      'vue',\r\n      'vue-router',\r\n      'vuex'\r\n    ]\r\n  },\r\n  output: {\r\n    path: resolve('docs'),\r\n    publicPath: '',\r\n    filename: '[name].[chunkhash:8].js',\r\n    chunkFilename: 'js/[name].[chunkhash:8].js'\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.vue$/,\r\n        loader: 'vue-loader',\r\n        options: {\r\n          loaders: {\r\n            css: ExtractTextPlugin.extract({\r\n              use: ['css-loader']\r\n            }),\r\n            less: ExtractTextPlugin.extract({\r\n              use: ['css-loader', 'less-loader']\r\n            })\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  plugins: [\r\n    new webpack.optimize.ModuleConcatenationPlugin(),\r\n    new ExtractTextPlugin({\r\n      filename: 'css/[name].[contenthash:8].css',\r\n      allChunks: true\r\n    }),\r\n    new webpack.optimize.CommonsChunkPlugin({\r\n      names: ['js/vendor', 'js/manifest']\r\n    }),\r\n    new HtmlWebpackPlugin({\r\n      filename: 'index.html',\r\n      template: 'index.html',\r\n      inject: true,\r\n      minify: {\r\n        removeComments: true,\r\n        collapseWhitespace: true,\r\n        removeAttributeQuotes: true\r\n      },\r\n      chunks: ['js/vendor', 'js/manifest', 'js/app'],\r\n      chunksSortMode: 'dependency'\r\n    }),\r\n    new webpack.LoaderOptionsPlugin({\r\n      minimize: true,\r\n      debug: false\r\n    }),\r\n    new webpack.optimize.OccurrenceOrderPlugin(),\r\n    new CleanWebpackPlugin(['docs'], {\r\n      root: resolve('./')\r\n    })\r\n  ]\r\n})\r\n"]}